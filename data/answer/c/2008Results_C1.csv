1116494,30250934,40,"<p>Call the <a href=""http://en.cppreference.com/w/cpp/utility/program/exit"" rel=""noreferrer""><code>std::exit</code></a> function. &nbsp;&nbsp;</p>
",4
1116498,30250934,11,"<p>Either return a value from your <code>main</code> or use the <code>exit</code> function.  Both take an int.  It doesn't really matter what value you return unless you have an external process watching for the return value.</p>
",1
1116507,30250934,10,"<p>Generally you would use the <code>exit()</code> method with an appropriate <a href=""http://www.gnu.org/s/libc/manual/html_node/Exit-Status.html"" rel=""nofollow noreferrer"">exit status</a>. </p>

<p>Zero would mean a successful run. A non-zero status indicates some sort of problem has occurred. This exit code is used by parent processes (e.g. shell scripts) to determine if a process has run successfully.</p>
",2
1116511,30250934,11,"<p>The program will terminate when the execution flow reaches the end of the main function.</p>

<p>To terminate it before then, you can use the exit(int status) function, where status is a value returned to whatever started the program. 0 normally indicates a non-error state</p>
",1
1118826,30250934,62,"<p>As Martin York mentioned, exit doesn't perform necessary clean-up like return does.</p>

<p>It's always better to use return in the place of exit.
In case if you are not in main, wherever you would like to exit the program, return to main first.</p>

<p>Consider the below example.
With the following program, a file will be created with the content mentioned.
But if return is commented &amp; uncommented exit(0), the compiler doesn't assure you that the file will have the required text.</p>

<pre><code>int main()
{
    ofstream os(""out.txt"");
    os &lt;&lt; ""Hello, Can you see me!\n"";
    return(0);
    //exit(0);
}
</code></pre>

<p>Not just this, Having multiple exit points in a program will make debugging harder.
Use exit only when it can be justified.</p>
",5
1123870,30250934,23,"<p>People are saying ""call exit(return code),"" but this is bad form. In small programs it is fine, but there are a number of issues with this:</p>

<ol>
<li>You will end up having multiple exit points from the program</li>
<li>It makes code more convoluted (like using goto)</li>
<li>It cannot release memory allocated at runtime</li>
</ol>

<p>Really, the only time you should exit the problem is with this line in main.cpp:</p>

<pre><code>return 0;
</code></pre>

<p>If you are using exit() to handle errors, you should learn about exceptions (and nesting exceptions), as a much more elegant and safe method. </p>
",4
1123843,30250934,11,"<p>If you have an error somewhere deep in the code, then either throw an exception or set the error code. It's always better to throw an exception instead of setting error codes.</p>
",1
